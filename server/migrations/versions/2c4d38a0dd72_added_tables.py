"""Added tables

Revision ID: 2c4d38a0dd72
Revises: 
Create Date: 2025-09-01 14:30:21.809999

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2c4d38a0dd72'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('_password_hash', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=False),
    sa.Column('role', sa.Enum('admin', 'customer', 'shopkeeper', name='user_roles'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('customer_name', sa.String(length=100), nullable=True),
    sa.Column('customer_phone', sa.String(length=15), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'confirmed', 'cancelled', name='order_status'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('order_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('kilograms', sa.Numeric(precision=8, scale=3), nullable=True),
    sa.Column('sale_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('cost_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('in_stock', sa.Integer(), nullable=True),
    sa.Column('minimum_stock', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('cost_price >= 0', name='positive_cost_price'),
    sa.CheckConstraint('in_stock >= 0', name='positive_stock'),
    sa.CheckConstraint('kilograms > 0', name='positive_weight'),
    sa.CheckConstraint('sale_price >= 0', name='positive_sale_price'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('notes', sa.String(length=200), nullable=True),
    sa.CheckConstraint('unit_price >= 0', name='positive_price'),
    sa.CheckConstraint('quantity > 0', name='valid_quantity'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('sale_number', sa.String(length=50), nullable=True),
    sa.Column('customer_name', sa.String(length=100), nullable=False),
    sa.Column('customer_phone', sa.String(length=15), nullable=True),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('cost_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('profit_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_status', sa.Enum('fully-paid', 'partial', 'debt', 'overdue', name='payment_status'), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('total_amount >= 0', name='positive_amount'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_id'),
    sa.UniqueConstraint('sale_number')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sale_id', sa.Integer(), nullable=False),
    sa.Column('method', sa.Enum('cash', 'mpesa', 'bank_transfer', 'card', name='payment_methods'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sale_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sale_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('cost_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.CheckConstraint('quantity > 0', name='valid_quantity'),
    sa.CheckConstraint('unit_price >= 0 AND cost_price >= 0', name='positive_prices'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mpesa_transactions',
    sa.Column('transaction_id', sa.String(length=100), nullable=False),
    sa.Column('checkout_request_id', sa.String(length=100), nullable=True),
    sa.Column('merchant_request_id', sa.String(length=100), nullable=True),
    sa.Column('account_reference', sa.String(length=100), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=False),
    sa.Column('transaction_desc', sa.String(length=200), nullable=True),
    sa.Column('status', sa.Enum('pending', 'success', 'failed', 'cancelled', name='mpesa_status'), nullable=False),
    sa.Column('mpesa_receipt_number', sa.String(length=200), nullable=True),
    sa.Column('transaction_date', sa.DateTime(), nullable=True),
    sa.Column('result_code', sa.Integer(), nullable=True),
    sa.Column('result_desc', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('transaction_id'),
    sa.UniqueConstraint('checkout_request_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mpesa_transactions')
    op.drop_table('sale_items')
    op.drop_table('payments')
    op.drop_table('sales')
    op.drop_table('order_items')
    op.drop_table('products')
    op.drop_table('orders')
    op.drop_table('users')
    op.drop_table('categories')
    # ### end Alembic commands ###
